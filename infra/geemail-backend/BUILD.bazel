load("@io_bazel_rules_jsonnet//jsonnet:jsonnet.bzl", "jsonnet_library", "jsonnet_to_json")
load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
load("@io_bazel_rules_docker//go:image.bzl", "go_image")
load("//tools:challenge.bzl", "ctf_challenge")

ctf_challenge()

go_image(
    name = "image",
    args = [
        "infra/geemail-backend/geemailconfig.json",  # TODO(adamyi): figure out how to not hard-code this
        "$(location :geemail.db)",
    ],
    data = [
        ":all-config",
        ":geemail.db",
    ],
    embed = [":go_default_library"],
    visibility = ["//visibility:public"],
)

go_library(
    name = "go_default_library",
    srcs = [
        "auth.go",
        "main.go",
    ],
    importpath = "geegle.org/infra/geemail-backend",
    visibility = ["//visibility:private"],
    deps = [
        "@com_github_dgrijalva_jwt_go//:go_default_library",
        "@com_github_mattn_go_sqlite3//:go_default_library",
    ],
)

go_binary(
    name = "geemail-backend",
    embed = [":go_default_library"],
    visibility = ["//visibility:public"],
)

jsonnet_library(
    name = "emails-config",
    srcs = ["emails.libsonnet"],
    deps = [
        "//chals:challenges_jsonnet",
        "//infra/jsonnet:utils",
    ],
)

jsonnet_library(
    name = "flags-config",
    srcs = ["flags.libsonnet"],
    deps = [
        "//chals:challenges_jsonnet",
        "//infra/jsonnet:utils",
    ],
)

jsonnet_library(
    name = "config",
    srcs = ["config.json"],
)

jsonnet_to_json(
    name = "all-config",
    src = "config.jsonnet",
    outs = ["geemailconfig.json"],
    deps = [
        ":config",
        ":emails-config",
        ":flags-config",
    ],
)
